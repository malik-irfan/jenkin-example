########################################################################################################################
#=========  SPRING BOOT DEFAULT LOGGING ========

logging.level.org.springframework.web=ERROR
logging.level.com.ef.client.ptcl.onewindow=DEBUG

# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
logging.level.guru.springframework.blogs.controllers=OFF
logging.level.DrugProxyService=DEBUG
logging.level.org.hibernate=OFF
#logging.file.max-size=2KB
#logging.file.max-history=5
logging.file=C:/EF/Logs/UpgradedOneWindow/Rebate/Spring/logs.log
log4j.logger.org.thymeleaf=OFF






################################################################################################################
# Live Reloader, run this command    mvn spring-boot:run
#======== Dev Tool will user while development for fast reloading ============
#spring.devtools.livereload.enabled=false






########################################################################################################################
#======= CONFIGURATION FOR HTTPS & HTTP ==========

#====== Spring Boot doesn’t support the configuration of both an HTTP connector and an HTTPS connector
# via application.properties. If you want to have both then you’ll need to configure one of them
# programmatically. It’s recommended to use application.properties to configure HTTPS as the HTTP connector
# is the easier of the two to configure programmatically =========

#======Define a custom port instead of the default
#======= (HTTPS PORT) ========#
server.port=8445
#======= (HTTP PORT) ========#
http.port=7171





###############################################################################################################
#  UNCOMMENT BELOW CONFIG IF NEED TO REQUEST OVER HTTPS

#===== Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true

#============ The format used for the keystore (either JKS or PKCS12)======
server.ssl.key-store-type=PKCS12
#============ The path to the keystore containing the certificate(either keystore.jks or keystore.p12)
#server.ssl.key-store=classpath:efkeystore.p12
server.ssl.key-store=classpath:keystore.p12
#============ The password used to generate the certificate ======
server.ssl.key-store-password=ptcl12345
#============ The alias mapped to the certificate ======
server.ssl.key-alias=ptcl